{
  "_args": [
    [
      {
        "raw": "level-ws",
        "scope": null,
        "escapedName": "level-ws",
        "name": "level-ws",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\PC de Elya\\Desktop\\ECE ING5\\Asynch server tech\\AsynchGIT\\MondayNode\\TP3"
    ]
  ],
  "_from": "level-ws@latest",
  "_id": "level-ws@1.0.0",
  "_inCache": true,
  "_location": "/level-ws",
  "_nodeVersion": "10.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/level-ws_1.0.0_1530392636660_0.6933303311859591"
  },
  "_npmUser": {
    "name": "ralphtheninja",
    "email": "ralphtheninja@riseup.net"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "level-ws",
    "scope": null,
    "escapedName": "level-ws",
    "name": "level-ws",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/level-ws/-/level-ws-1.0.0.tgz",
  "_shasum": "19a22d2d4ac57b18cc7c6ecc4bd23d899d8f603b",
  "_shrinkwrap": null,
  "_spec": "level-ws",
  "_where": "C:\\Users\\PC de Elya\\Desktop\\ECE ING5\\Asynch server tech\\AsynchGIT\\MondayNode\\TP3",
  "bugs": {
    "url": "https://github.com/Level/level-ws/issues"
  },
  "dependencies": {
    "inherits": "^2.0.3",
    "readable-stream": "^2.2.8",
    "xtend": "^4.0.1"
  },
  "description": "A basic WriteStream implementation for LevelUP",
  "devDependencies": {
    "coveralls": "~3.0.1",
    "level": "^4.0.0",
    "level-concat-iterator": "^2.0.0",
    "nyc": "~12.0.2",
    "secret-event-listener": "~1.0.0",
    "standard": "^11.0.1",
    "tape": "^4.9.0",
    "tempy": "^0.2.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RXEfCmkd6WWFlArh3X8ONvQPm8jNpfA0s/36M4QzLqrLEIt1iJE9WBHLZ5vZJK6haMjJPJGJCQWfjMNnRcq/9Q==",
    "shasum": "19a22d2d4ac57b18cc7c6ecc4bd23d899d8f603b",
    "tarball": "https://registry.npmjs.org/level-ws/-/level-ws-1.0.0.tgz",
    "fileCount": 9,
    "unpackedSize": 30037,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbN/A8CRA9TVsSAnZWagAA3EYQAJuzN1Ff7tvlsqcDv2Xk\n31LJ69R8mdD2vROuFHd/JGdy1gdgSuME0sUD3HMM7gBsNu35Sf5TJOdPxLZt\nL9RtXkdf9K8/0or3NtNy1wXHiuFMZK5b/wNAyB1X87j/jcZ2AOWKquCwpFxi\n8gHAg/zvrfd3AeKsrM3uxAWf00D7WztLmlb8l5j3E20lPKMYfVDwQ/kqHwJh\n+Z+0N+cdRA9cJrHjvnjn1mEzfT0R3mKRK3YMqMRZNW94ZbBCWCy03fsmpnQ4\nyzdiRr+daYXm6ZXmdKkkc57OebN6K39/qFGzYvxI8LcF15iU1qD61vy2XjiC\nqXCplrsd6yZgEDIr9+lRl20VEt+BrDS/g2r9beWf9QK0MjBH3BeX44Ck4c8g\nk2LXSJGSN633EO9dhg2i/Cn7iDjw+5lfohW+zXBkh/ARoNxu2MVBe94a/47Z\niRIWKotku2t/TV6WExy5DwZ28bC0xhqXXvWSlT9g5QNp/Cm9UrMeEVaOnU4O\n8SK0r5bZQN9RtifFOEUigo18ybVj2unWZ+hXH29la3Iz20D8U/a1+a+biPA0\nSiVS2U4Oqe4X9GJMFRubYLAZaHRyOcAh5ZpZqkohaagZ1w5AE/hrFQ822FBm\nTI+G6ZD2xBoSN2655q7N5XSaRlx/YeLyiP0aeGezP69k79cjN9gH2HfyBL32\n/C/Q\r\n=YmLN\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "3e2bcab3c5470c71d692629aea8731c3b067d461",
  "homepage": "https://github.com/Level/level-ws",
  "keywords": [
    "leveldb",
    "stream",
    "levelup"
  ],
  "license": "MIT",
  "main": "level-ws.js",
  "maintainers": [
    {
      "name": "juliangruber",
      "email": "julian@juliangruber.com"
    },
    {
      "name": "ralphtheninja",
      "email": "ralphtheninja@riseup.net"
    },
    {
      "name": "rvagg",
      "email": "r@va.gg"
    },
    {
      "name": "vweevers",
      "email": "dev@vincentweevers.nl"
    }
  ],
  "name": "level-ws",
  "optionalDependencies": {},
  "readme": "# level-ws\n\n> A basic WriteStream implementation for [levelup](https://github.com/level/levelup)\n\n[![level badge][level-badge]](https://github.com/level/awesome)\n[![npm](https://img.shields.io/npm/v/level-ws.svg)](https://www.npmjs.com/package/level-ws)\n![Node version](https://img.shields.io/node/v/level-ws.svg)\n[![Build Status](https://img.shields.io/travis/Level/level-ws.svg)](http://travis-ci.org/Level/level-ws)\n[![dependencies](https://david-dm.org/Level/level-ws.svg)](https://david-dm.org/level/level-ws)\n[![npm](https://img.shields.io/npm/dm/level-ws.svg)](https://www.npmjs.com/package/level-ws)\n[![Coverage Status](https://coveralls.io/repos/github/Level/level-ws/badge.svg)](https://coveralls.io/github/Level/level-ws)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n`level-ws` provides the most basic general-case WriteStream for `levelup`. It was extracted from the core `levelup` at version 0.18.0.\n\n`level-ws` is not a high-performance WriteStream. If your benchmarking shows that your particular usage pattern and data types do not perform well with this WriteStream then you should try one of the alternative WriteStreams available for `levelup` that are optimised for different use-cases.\n\n**If you are upgrading:** please see [`UPGRADING.md`](UPGRADING.md).\n\n## Usage\n\n```js\nvar level = require('level')\nvar WriteStream = require('level-ws')\n\nvar db = level('/path/to/db')\nvar ws = WriteStream(db) // ...\n```\n\n## API\n\n### `ws = WriteStream(db[, options])`\n\nCreates a [Writable](https://nodejs.org/dist/latest-v8.x/docs/api/stream.html#stream_class_stream_writable) stream which operates in **objectMode**, accepting objects with `'key'` and `'value'` pairs on its `write()` method.\n\nThe optional `options` argument may contain:\n\n* `type` *(string, default: `'put'`)*: Default batch operation for missing `type` property during `ws.write()`.\n\nThe WriteStream will buffer writes and submit them as a `batch()` operations where writes occur *within the same tick*.\n\n```js\nvar ws = WriteStream(db)\n\nws.on('error', function (err) {\n  console.log('Oh my!', err)\n})\nws.on('close', function () {\n  console.log('Stream closed')\n})\n\nws.write({ key: 'name', value: 'Yuri Irsenovich Kim' })\nws.write({ key: 'dob', value: '16 February 1941' })\nws.write({ key: 'spouse', value: 'Kim Young-sook' })\nws.write({ key: 'occupation', value: 'Clown' })\nws.end()\n```\n\nThe standard `write()`, `end()` and `destroy()` methods are implemented on the WriteStream. `'drain'`, `'error'`, `'close'` and `'pipe'` events are emitted.\n\nYou can specify encodings for individual entries by setting `.keyEncoding` and/or `.valueEncoding`:\n\n```js\nwriteStream.write({\n  key: new Buffer([1, 2, 3]),\n  value: { some: 'json' },\n  keyEncoding: 'binary',\n  valueEncoding : 'json'\n})\n```\n\nIf individual `write()` operations are performed with a `'type'` property of `'del'`, they will be passed on as `'del'` operations to the batch.\n\n```js\nvar ws = WriteStream(db)\n\nws.on('error', function (err) {\n  console.log('Oh my!', err)\n})\nws.on('close', function () {\n  console.log('Stream closed')\n})\n\nws.write({ type: 'del', key: 'name' })\nws.write({ type: 'del', key: 'dob' })\nws.write({ type: 'put', key: 'spouse' })\nws.write({ type: 'del', key: 'occupation' })\nws.end()\n```\n\nIf the *WriteStream* is created with a `'type'` option of `'del'`, all `write()` operations will be interpreted as `'del'`, unless explicitly specified as `'put'`.\n\n```js\nvar ws = WriteStream(db, { type: 'del' })\n\nws.on('error', function (err) {\n  console.log('Oh my!', err)\n})\nws.on('close', function () {\n  console.log('Stream closed')\n})\n\nws.write({ key: 'name' })\nws.write({ key: 'dob' })\n// but it can be overridden\nws.write({ type: 'put', key: 'spouse', value: 'Ri Sol-ju' })\nws.write({ key: 'occupation' })\nws.end()\n```\n\n## License\n\n[MIT](./LICENSE.md) Â© 2012-present `level-ws` [Contributors](./CONTRIBUTORS.md).\n\n[level-badge]: http://leveldb.org/img/badge.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Level/level-ws.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "test": "standard && nyc node test.js"
  },
  "version": "1.0.0"
}
